# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy page

on:
  # Runs on pushes targeting the default branch
  pull_request: 
    branches: ["main"]
  push: 
    branches: ["main"]
    

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write



# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Start Tracee profiling in background
        uses: aquasecurity/tracee-action@9dd4f95736ab133fdf698321913b5498ed656420
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Packaging Action
        uses: moractions/fake-packaging-action@v1.0.0
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./my-app
          destination: ./_site      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
      - name: Stop and Check Tracee results and create a PR
        uses: aquasecurity/tracee-action@1c04135eb3d95a927e75721ac49c9ae6038bf0ee
        with:
         create-pr: "true"
         fail-on-diff: "false"

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: ${{ github.ref_name == 'main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
